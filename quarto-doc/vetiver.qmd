---
title: "Applying vetiver"
date: 2022.12.14.
format:
  pdf:
    toc: true
    number-sections: true
    number-depth: 2
    colorlinks: true
    highlight-style: github-dark
mainfont: Gulim
---

## Load libraries and models_list
 - vetiver: 모델을 저장, 로드, 배포하기 위한 패키지
 - pins: cache를 이용한 자원 관리 패키지. 주로 원격리소스(CSV, JSON, 이미지, R object 등등)를 로컬 캐시에 고정하는 역할
 - plumber: R을 사용해 로컬에서 웹서버를 띄우기 위한 패키지

```{r}
library(vetiver)
library(pins) 
library(plumber)
library(dplyr)

models_list <- readRDS(file = "~/git/stove/data/sample_models_list.rda")
names(models_list)
```

## Create a vetiver object for deployment of my model

```{r}
my_model <- "logisticRegression_glmnet"
version <- 0.1
model_name = paste0(my_model,"_", version)

v <- vetiver::vetiver_model(model = models_list[[my_model]]$.workflow[[1]],
                            model_name = model_name)
v
```
## Save the vetiver object in local folder

```{r}
model_board <- pins::board_folder(path = "../models/")
model_board %>% vetiver::vetiver_pin_write(v)
```

## Deploy my model

```{r, eval = FALSE}
plumber::pr() %>%
  vetiver::vetiver_api(v) %>%
  plumber::pr_run(port = 8088)
```

## predict for new data using deployed model

- 위 포트에 deploy가 되어있으면, endpoint를 지정하고 다른 세션에서 새 데이터를 모델에 투입
```{r, eval = FALSE}
endpoint <- vetiver_endpoint("http://127.0.0.1:8088/predict")

new_sac <- cleaned_data %>% 
    dplyr::slice_sample(n = 50) %>% 
    dplyr::select(TG, SEX, AGE_G, HGB)

predict(endpoint, new_sac)
```
