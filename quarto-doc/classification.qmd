---
title: "goophi"
date: 2022.08.22.
format:
  pdf:
    toc: true
    number-sections: true
    number-depth: 2
    colorlinks: true
    highlight-style: github
mainfont: Gulim
---

```{r setup, message = FALSE}
library(goophi)
```

# Introduction

1) 본 문서는 goophi 패키지를 Shiny app에서 사용하는 것을 상정해 작성했습니다.

2) 본 문서의 케이스 스타일은 Camel case와 Snake case가 혼용되어 있습니다.
- Camel case : goophi의 함수명 및 파라미터명
- Snake case: 유저로부터 받는 입력, Shiny app의 server에서 사용(될 것이라고 예상)하는 Object명, snake case로 작성된 dependencies의 함수명 등

# Import sample data

전처리가 완료된 샘플데이터를 불러옵니다. 
 - NA가 없어야 함
 - string value가 있는 열은 factor로 변환
 - 한 열이 모두 같은 값으로 채워져 있을 경우 제외해야 함
 - Date type column이 없어야 함

```{r}
cleaned_data <- read.csv(file = "~/git/goophi/data/boston_c.csv", stringsAsFactors = TRUE)
str(cleaned_data)
```

# Data Setup Tab

|    User Input |                                    description |
|--------------:|-----------------------------------------------:|
|     targetVar |                       목적 변수(target, label) |
| trainSetRatio | 전체 데이터 중 train set의 비율 (range: 0 - 1) |

1) User input을 다음과 같이 받습니다

```{r}
target_var <- "Pcrime"
train_set_ratio <- "0.7"
seed <- "1234"
formula <- paste0(target_var, " ~ .") # user 입력 x (1에서 user가 targetVar를 입력했을 때 함께 생성)
```

2) Train-test split 작업이 완료된 Object를 저장하고, Train set을 보여줍니다.

```{r}
split_tmp <- goophi::trainTestSplit(data = cleaned_data,
                                    target = target_var,
                                    prop = train_set_ratio,
                                    seed = seed
                                    )

data_train <- split_tmp[[1]] # train data
data_test <- split_tmp[[2]] # test data
data_split <- split_tmp[[3]] # whole data with split information
```

3) train set에 적용할 전처리 정보를 담은 recipe를 생성합니다

```{r}
rec <- goophi::prepForCV(data = data_train,
                         formula = formula,
                         seed = seed
                         )
```
                         
# Modeling with CV Tab

grid search, cross validation을 통해 유저가 선택한 모델을 fitting합니다.

| User Input |                                             description |
|-----------:|--------------------------------------------------------:|
|       algo |                                            ML 모델 선택 |
|     engine |                                             engine 선택 |
|       mode |                                               mode 선택 |
|     metric |                   Best performance에 대한 평가지표 선택 |
|          v | Cross validation시 train set을 몇 번 분할할 것인지 입력 |
