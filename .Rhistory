self$mixture = NULL
},
print = function(...){
# cat(glue::glue("
#                engine : {self$engine}
#                mode : {self$mode}
#                penalty : {self$penalty}
#                mixture : {self$mixture}
#                "))
cat("Student: \n")
invisible(self)
}
))
logistic_glm <- logisticRegClass$new(engine = "glm",
mode = "classificaion", NULL, NULL) #no params
logistic_glm
logisticRegClass <- R6Class("Logistic", list(
engine = NULL,
mode = NULL,
penalty = NULL,
mixture = NULL,
initialize = function(engine, mode, penalty, mixture){
self$engine = engine
self$mode  = mode
self$penalty = NULL
self$mixture = NULL
},
print = function(...){
cat("Student: \n")
cat(glue::glue("
engine : {self$engine}
mode : {self$mode}
penalty : {self$penalty}
mixture : {self$mixture}
"))
invisible(self)
}
))
logisticRegClass
logistic_glm <- logisticRegClass$new(engine = "glm",
mode = "classificaion", NULL, NULL) #no params
logistic_glm
logisticRegClass <- R6Class("Logistic", list(
engine = NULL,
mode = NULL,
penalty = NULL,
mixture = NULL,
initialize = function(engine, mode, penalty, mixture){
self$engine = engine
self$mode  = mode
self$penalty = penalty
self$mixture = mixture
},
print = function(...){
cat("Student: \n")
cat(glue::glue("
engine : {self$engine}
mode : {self$mode}
penalty : {self$penalty}
mixture : {self$mixture}
"))
invisible(self)
}
))
logisticRegClass
logistic_glm <- logisticRegClass$new(engine = "glm",
mode = "classificaion", NULL, NULL) #no params
logistic_glm
logisticRegClass <- R6Class("Logistic", list(
engine = NULL,
mode = NULL,
penalty = NULL,
mixture = NULL,
initialize = function(engine, mode, penalty, mixture){
self$engine = engine
self$mode  = mode
self$penalty = penalty
self$mixture = mixture
},
print = function(...){
cat("Student: \n")
cat(glue::glue("
engine : {self$engine}
mode : {self$mode}
penalty : {self$penalty}
mixture : {self$mixture}
"))
invisible(self)
}
))
logisticRegClass
logistic_glm <- logisticRegClass$new(engine = "glm",
mode = "classificaion","a","b") #no params
logistic_glm
glue
?glue::glue
logisticRegClass <- R6Class("Logistic", list(
engine = NULL,
mode = NULL,
penalty = NULL,
mixture = NULL,
initialize = function(engine, mode, penalty, mixture){
self$engine = engine
self$mode  = mode
self$penalty = penalty
self$mixture = mixture
},
null_transformer <- function(str = "NULL") {
function(text, envir) {
out <- glue::identity_transformer(text, envir)
if (is.null(out)) {
return(str)
}
out
}
}
print = function(...){
cat("Student: \n")
cat(glue::glue("
engine : {self$engine}
mode : {self$mode}
penalty : {self$penalty}
mixture : {self$mixture}
",
.transformer = null_transformer("NULL")))
invisible(self)
}
))
logisticRegClass
logistic_glm <- logisticRegClass$new(engine = "glm",
mode = "classificaion","a","b") #no params
logistic_glm
logistic_glm <- logisticRegClass$new(engine = "glm",
mode = "classificaion") #no params
logistic_glm
logisticRegClass <- R6Class("Logistic", list(
engine = NULL,
mode = NULL,
penalty = NULL,
mixture = NULL,
initialize = function(engine, mode, penalty, mixture){
self$engine = engine
self$mode  = mode
self$penalty = penalty
self$mixture = mixture
},
null_transformer <- function(str = "NULL") {
function(text, envir) {
out <- glue::identity_transformer(text, envir)
if (is.null(out)) {
return(str)
}
out
}
}
print = function(...){
cat("Student: \n")
cat(glue::glue("
engine : {self$engine}
mode : {self$mode}
penalty : {self$penalty}
mixture : {self$mixture}
",
.transformer = null_transformer("NULL")))
invisible(self)
}
))
logisticRegClass
logistic_glm <- logisticRegClass$new(engine = "glm",
mode = "classificaion") #no params
logistic_glm
logisticRegClass <- R6Class("Logistic", list(
engine = NULL,
mode = NULL,
penalty = NULL,
mixture = NULL,
initialize = function(engine, mode, penalty, mixture){
self$engine = engine
self$mode  = mode
self$penalty = penalty
self$mixture = mixture
},
null_transformer <- function(str = "NULL") {
function(text, envir) {
out <- glue::identity_transformer(text, envir)
if (is.null(out)) {
return(str)
}
out
}
invisible(self)
},
print = function(...){
cat("Student: \n")
cat(glue::glue("
engine : {self$engine}
mode : {self$mode}
penalty : {self$penalty}
mixture : {self$mixture}
",
.transformer = null_transformer("NULL")))
invisible(self)
}
))
logisticRegClass
logistic_glm <- logisticRegClass$new(engine = "glm",
mode = "classificaion") #no params
logistic_glm
logisticRegClass <- R6Class("Logistic", list(
engine = NULL,
mode = NULL,
penalty = NULL,
mixture = NULL,
initialize = function(engine, mode, penalty, mixture){
self$engine = engine
self$mode  = mode
self$penalty = penalty
self$mixture = mixture
},
null_transformer <- function(str = "NULL") {
function(text, envir) {
out <- glue::identity_transformer(text, envir)
if (is.null(out)) {
return(str)
}
out
}
invisible(self)
},
print = function(...){
cat("Student: \n")
cat(glue::glue("
engine : {self$engine}
mode : {self$mode}
penalty : {self$penalty}
mixture : {self$mixture}
",
.transformer = null_transformer("NULL")))
invisible(self)
}
))
logisticRegClass <- R6Class("Logistic", list(
engine = NULL,
mode = NULL,
penalty = NULL,
mixture = NULL,
initialize = function(engine, mode, penalty, mixture){
self$engine = engine
self$mode  = mode
self$penalty = penalty
self$mixture = mixture
},
null_transformer = function(str = "NULL") {
function(text, envir) {
out <- glue::identity_transformer(text, envir)
if (is.null(out)) {
return(str)
}
out
}
invisible(self)
},
print = function(...){
cat("Student: \n")
cat(glue::glue("
engine : {self$engine}
mode : {self$mode}
penalty : {self$penalty}
mixture : {self$mixture}
",
.transformer = null_transformer("NULL")))
invisible(self)
}
))
logisticRegClass <- R6Class("Logistic", list(
engine = NULL,
mode = NULL,
penalty = NULL,
mixture = NULL,
initialize = function(engine, mode, penalty, mixture){
self$engine = engine
self$mode  = mode
self$penalty = penalty
self$mixture = mixture
},
null_transformer = function(str = "NULL") {
function(text, envir) {
out <- glue::identity_transformer(text, envir)
if (is.null(out)) {
return(str)
}
out
}
invisible(self)
},
print = function(...){
cat("Student: \n")
cat(glue::glue("
engine : {self$engine}
mode : {self$mode}
penalty : {self$penalty}
mixture : {self$mixture}
",
.transformer = null_transformer("NULL")))
invisible(self)
}
))
logisticRegClass
logistic_glm <- logisticRegClass$new(engine = "glm",
mode = "classificaion") #no params
logisticRegClass <- R6Class("Logistic", list(
engine = NULL,
mode = NULL,
penalty = NULL,
mixture = NULL,
initialize = function(engine, mode, penalty, mixture){
self$engine = engine
self$mode  = mode
self$penalty = NULL
self$mixture = NULL
},
null_transformer = function(str = "NULL") {
function(text, envir) {
out <- glue::identity_transformer(text, envir)
if (is.null(out)) {
return(str)
}
out
}
invisible(self)
},
print = function(...){
cat("Info: \n")
cat(glue::glue("
engine : {self$engine}
mode : {self$mode}
penalty : {self$penalty}
mixture : {self$mixture}
",
.transformer = null_transformer("NULL"))
)
invisible(self)
}
))
logisticRegClass
logistic_glm <- logisticRegClass$new(engine = "glm",
mode = "classificaion") #no params
logistic_glm
logisticRegClass <- R6Class("Logistic", list(
engine = NULL,
mode = NULL,
penalty = NULL,
mixture = NULL,
initialize = function(engine, mode, penalty, mixture){
self$engine = engine
self$mode  = mode
self$penalty = NULL
self$mixture = NULL
},
null_transformer = function(str = "NULL") {
function(text, envir) {
out <- glue::identity_transformer(text, envir)
if (is.null(out)) {
return(str)
}
out
}
},
print = function(...){
cat("Info: \n")
cat(glue::glue("
engine : {self$engine}
mode : {self$mode}
penalty : {self$penalty}
mixture : {self$mixture}
",
.transformer = null_transformer("NULL"))
)
invisible(self)
}
))
logisticRegClass
logistic_glm <- logisticRegClass$new(engine = "glm",
mode = "classificaion") #no params
logistic_glm
null_transformer = function(str = "NULL") {
function(text, envir) {
out <- glue::identity_transformer(text, envir)
if (is.null(out)) {
return(str)
}
out
}
}
logisticRegClass <- R6Class("Logistic", list(
engine = NULL,
mode = NULL,
penalty = NULL,
mixture = NULL,
initialize = function(engine, mode, penalty, mixture){
self$engine = engine
self$mode  = mode
self$penalty = NULL
self$mixture = NULL
},
print = function(...){
cat("Info: \n")
cat(glue::glue("
engine : {self$engine}
mode : {self$mode}
penalty : {self$penalty}
mixture : {self$mixture}
",
.transformer = null_transformer("NULL"))
)
invisible(self)
}
))
logisticRegClass
logistic_glm <- logisticRegClass$new(engine = "glm",
mode = "classificaion") #no params
logistic_glm
logisticRegClass <- R6Class("Logistic", list(
engine = NULL,
mode = NULL,
penalty = NULL,
mixture = NULL,
initialize = function(engine, mode, penalty, mixture){
self$engine = engine
self$mode  = mode
self$penalty = penalty
self$mixture = mixture
},
print = function(...){
cat("Info: \n")
cat(glue::glue("
engine : {self$engine}
mode : {self$mode}
penalty : {self$penalty}
mixture : {self$mixture}
",
.transformer = null_transformer("NULL"))
)
invisible(self)
}
))
logisticRegClass
logistic_glm <- logisticRegClass$new(engine = "glm",
mode = "classificaion") #no params
logistic_glm
null_transformer = function(str = "NULL") {
function(text, envir) {
out <- glue::identity_transformer(text, envir)
if (is.null(out)) {
return(str)
}
out
}
}
logisticRegClass <- R6Class("Logistic", list(
engine = NULL,
mode = NULL,
penalty = NULL,
mixture = NULL,
initialize = function(engine, mode, penalty, mixture){
self$engine = engine
self$mode  = mode
self$penalty = NULL
self$mixture = NULL
},
print = function(...){
cat("Model's info: \n")
cat(glue::glue("
engine : {self$engine}
mode : {self$mode}
penalty : {self$penalty}
mixture : {self$mixture}
",
.transformer = null_transformer("NULL"))
)
invisible(self)
}
))
logisticRegClass
logistic_glm <- logisticRegClass$new(engine = "glm",
mode = "classificaion") #no params
logistic_glm
logisticRegClass <- R6::R6Class("Logistic", list(
engine = NULL,
mode = NULL,
penalty = NULL,
mixture = NULL,
initialize = function(engine, mode, penalty, mixture){
self$engine = engine
self$mode  = mode
self$penalty = NULL
self$mixture = NULL
},
print = function(...){
cat("Model's info: \n")
cat(glue::glue("
engine : {self$engine}
mode : {self$mode}
penalty : {self$penalty}
mixture : {self$mixture}
",
.transformer = null_transformer("NULL"))
)
invisible(self)
}
))
logisticRegClass
